pipeline {
    agent any

    environment {
        GOPATH = "${WORKSPACE}"
        ECR_REGISTRY_BACKEND = credentials('ecr-registry-backend')
    }
    stages {
        stage('CloneRepo') {
            steps {
                script {
                    cleanWs()
                    sh 'mkdir \'./src\''
                    sh 'mkdir \'./bin\''
                    dir ('src'){
                        sh 'git clone https://github.com/AlexBaily/KitchenHelper-backend.git'       
                    }

                }
            }
        }
        stage ('BuildLocally') {
            steps {
                script {
                    dir('src/KitchenHelper-backend') {
                        sh 'echo $GOPATH'
                        sh 'go get -d -v ./...'
                        sh 'go install -v ./...'
                    }
                }
            }
        }
        stage('UnitTest') {
            steps {
                script {
                   dir('src/KitchenHelper-backend') {
                        sh 'go test ./...'
                   }
                }
            }
        }
        stage('Build-Image') {
            steps {
                script {
                   dir('src/KitchenHelper-backend') {
                        sh '$(aws ecr get-login --no-include-email --region eu-west-1)'
                            def siteImage = docker.build("360577070949.dkr.ecr.eu-west-1.amazonaws.com/kitchenhelper-backend:${env.BUILD_ID}")
                            siteImage.inside {
                                sh 'echo "Inside the container"'
                            }
                            siteImage.push()
                   }
                } 
            }
        }
        stage('Test-Image') {
            steps {
                script {
                    '''
                        Todo:
                            Write integration tests.
                            Testing front end.
                            Further automate by creating a test dynamoDB table using a TF module
                            TF module will create TF table with and return the name
                            The name will be pushed into the environment values;
                            the rest of the values will be taken from SSM. 
                            Will also provision ACCESS and Secret keys for the container for testing.
                            Permissions will be secured with a permission boundary for Jenkins to make
                            sure  that it can't create any users with unwanted permissions.
                    '''
                }
            }
        }
    }
}
